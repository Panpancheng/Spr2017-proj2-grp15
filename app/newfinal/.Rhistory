load("/Users/chenyun/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("workspace1.RData")
View(new_campus)
runApp()
View(new_campus)
new_campus$state[which(new_campus$campus == "The California Maritime Academy")] <- "california"
View(new_campus)
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addTiles
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
new_campus$state[which(new_campus$campus == "Webb Institute")] <- "new york"
which(new_campus$campus == "Polytechnic University of Puerto Rico-Miami")
new_campus <- new_campus[-which(new_campus$campus == "Polytechnic University of Puerto Rico-Miami"),]
new_campus <- new_campus[-which(new_campus$campus == "Polytechnic University of Puerto Rico-Miami"),]
new_campus <- new_campus[-which(new_campus$campus == "Polytechnic University of Puerto Rico-Miami"),]
View(new_campus)
load("/Users/chenyun/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
new_campus$state[which(new_campus$campus == "Webb Institute")] <- "new york"
new_campus <- new_campus[-which(new_campus$campus == "Polytechnic University of Puerto Rico-Miami"),]
View(new_campus)
runApp()
runApp()
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
runApp()
new_campus <- new_campus[-which(new_campus$campus == "Berea College"),]
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace.RData")
View(new_crimes)
View(new_campus)
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
toupper("a b c")
toupper(new_campus$state)
?toupper
new_campus <- toupper(new_campus$state)
runApp()
shinyUI(dashboardPage(
# Application title
dashboardHeader(title = "US Campus Crime App"),
# Sidebar
dashboardSidebar(
sidebarMenu(
menuItem("US Crime Map", tabName = "crime_map", icon = icon("map-marker"), badgeColor='light-blue'),
menuItem("US Campus Crime", tabName = "dashboard", icon = icon("university")),
menuItem("Comparasion", tabName = "comparasion", icon = icon("graduation-cap"))
)
),
# Body
dashboardBody(
tabItems(
# tab-item one: state crime map
tabItem(tabName = "crime_map",
fluidRow(box(htmlOutput("title1"),width=12,background='light-blue')),
fluidRow(infoBoxOutput("maxbox"),
infoBoxOutput("medbox"),
infoBoxOutput("minbox")),
fluidRow(plotlyOutput("stmap"), title='US Crime Colored Map'),
fluidRow(
column(10,
sliderInput("Year",
label = "Choose year:",min=2001,max=2014, value=2008, animate=T)
)
)
),
#################tab-item two: Comparasion ##########################################################
tabItem(tabName = "comparasion",
fluidPage(
titlePanel( 'Compare Data for Multiple Schools'),
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId = 'show_schools',
label = 'Schools to compare:',
choices = as.character(colnames(t.schools2014)),
selected = as.character(colnames(t.schools2014)[c(1,2)]),
width = "200px"
)
),
mainPanel(
tabsetPanel(
id = 'criminal.offenses',
tabPanel('Criminal Offenses',
DT::dataTableOutput('criminal.offenses'),
plotOutput("rate.bar"),
plotOutput("schoolTrend")))
)
)
)),
#######################################################################################################
tabItem(tabName = "dashboard",
# fluidPage(
#   titlePanel( 'Choose Your State'),
#   sidebarLayout(
#     sidebarPanel(
#       selectInput(inputId = 'states',
#                   label = 'Your State:',
#                   choices = as.character(new_campus$state[order(new_campus$state)]),
#                   selected = T,
#                   width = "200px"
#       )
#     ),
#
#     mainPanel(
#       leafletOutput("campus_map")
#
#      # ,fluidRow(leafletOutput("school_map"))
#     )
#   )
# )
fluidRow(
column(width = 9,
box(width = NULL, solidHeader = T,
leafletOutput("campus_map", height = 600))),
column(width = 3,
box(width = NULL, status = "warning",
uiOutput("state_select"),
checkboxInput("all_state", "Show All", FALSE)))
))
)
)
)
)
getwd()
load("workspace1.RData")
View(new_campus)
new_campus$state <- toupper(new_campus$state)
new_campus$state <- toupper(new_campus$state)
new_campus$state <- toupper(new_campus$state)
save.image("~/Desktop/GR5243/Spr2017-proj2-grp15/app/newfinal/workspace1.RData")
runApp()
runApp()
runApp()
summary(new_campus$rate)
runApp()
runApp()
runApp()
runApp()
runApp()
getColor(new_campus)
getColor <- function(camp) {
sapply(camp$rate, function(rate) {
if(rate <= 0.97) {
"green"
} else if(rate <= 2.29) {
"orange"
} else {
"red"
} })
}
getColor(new_campus)
length(getColor(new_campus))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
subset(new_campus, new_campus$state == "NEW YORK")
test <- subset(new_campus, new_campus$state == "NEW YORK")
runApp()
runApp()
runApp()
?sapply
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
part_saved <- quote(subset(new_campus, new_campus$state == "NEW YORK"))
part_saved
campus_data <- reactive({
part <- subset(new_campus, new_campus$state == "NEW YORK")
})
isolate(campus_data())
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
